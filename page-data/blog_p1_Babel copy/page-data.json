{"componentChunkName":"component---src-templates-blog-post-js","path":"/blog_p1_Babel copy/","result":{"data":{"markdownRemark":{"html":"<p>road blocks </p>\n<p>inspector kept getting a error\n<code>! SyntaxError: expected expression, got '&#x3C;'</code></p>\n<p>the error was coming from my JS file\nin my component when attempting to return <div></div></p>\n<p>found that this was <a href=\"https://reactjs.org/docs/introducing-jsx.html\">JSX</a> and the reason I was getting this error was becauce I didn't have anything in place to convert the <a href=\"https://reactjs.org/docs/introducing-jsx.html\">JSX</a> to plain JavaScript code suitable for a browser.</p>\n<p>Solution go to <a href=\"https://reactjs.org/docs/add-react-to-a-website.html\">react documentation</a>\nfound there was two ways to handle this I chose to add a JSX preprocessor to the project following the steps I was able to load <a href=\"https://babeljs.io/docs/en/\">Babel</a> in to the project folder using <a href=\"https://docs.npmjs.com/\">npm</a> and using <a href=\"https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b\">npx</a> on the command line to run it.</p>\n<p>After doing this was still getting the same error <code>!SyntaxError: expected expression, got '&#x3C;'</code>\ngoing back to the documentation I realized that once the npx command <code>npx babel --watch src --out-dir . --presets react-app/prod</code> is ran babel will watch the .js file that you put in the src directory and from there create a preprocessed version of the .js file with plain JavaScript code suitable for the browser.</p>\n<p>I created a src directory and copied the .js file to it, however my mistake was I copied and not moved the file so it appeared that when babel read the .js from the src directory it did not create a preprocced version because a file with the  name already existed. When I deleted my orignal .js file it allowed babel to read the src .js file and then create a preprocessed .js file and the magic the browser rendered my compenent as expected. </p>","frontmatter":{"title":"turning tet first project from JavaScript 30 into a react app."}}},"pageContext":{"slug":"/blog_p1_Babel copy/"}}}